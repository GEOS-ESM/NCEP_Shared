

  FUNCTION get_scalar_#KIND#( &
    NC_FileID,      &  ! Input
    Variable_Name,  &  ! Input
    Variable_Value, &  ! Output
    Start,          &  ! Optional input
    Variable_ID,    &  ! Optional output
    Message_Log )   &  ! Error messaging
  RESULT ( Error_Status )


    !#--------------------------------------------------------------------------#
    !#                       -- TYPE DECLARATIONS --                            #
    !#--------------------------------------------------------------------------#

    ! ---------
    ! Arguments
    ! ---------

    ! -- Input
    INTEGER,                           INTENT( IN )  :: NC_FileID
    CHARACTER( * ),                    INTENT( IN )  :: Variable_Name

    ! -- Type specific output
    #TYPE#( #KIND# ), INTENT( OUT ) :: Variable_Value

    ! -- Optional input
    INTEGER, DIMENSION( : ), OPTIONAL, INTENT( IN )  :: Start

    ! -- Optional output
    INTEGER,                 OPTIONAL, INTENT( OUT ) :: Variable_ID

    ! -- Error messaging
    CHARACTER( * ),          OPTIONAL, INTENT( IN )  :: Message_Log


    ! ---------------
    ! Function result
    ! ---------------

    INTEGER :: Error_Status


    ! ----------------
    ! Local parameters
    ! ----------------

    CHARACTER( * ), PARAMETER :: ROUTINE_NAME = 'Get_netCDF_Variable(scalar #KIND#)'


    ! ---------------
    ! Local variables
    ! ---------------

    INTEGER :: NF90_Status
    INTEGER :: varID



    !#--------------------------------------------------------------------------#
    !#                  -- ASSIGN A SUCCESSFUL RETURN STATUS --                 #
    !#--------------------------------------------------------------------------#

    Error_Status = SUCCESS



    !#--------------------------------------------------------------------------#
    !#                        -- GET THE VARIABLE ID --                         #
    !#--------------------------------------------------------------------------#

    NF90_Status = NF90_INQ_VARID( NC_FileID, &
                                  TRIM( Variable_Name ), &
                                  varID )

    IF ( NF90_Status /= NF90_NOERR ) THEN
      Error_Status = FAILURE
      CALL Display_Message( ROUTINE_NAME, &
                            'Error inquiring variable ID for '// &
                              TRIM( Variable_Name )// &
                              ' - '// &
                              TRIM( NF90_STRERROR( NF90_Status ) ), &
                            Error_Status, &
                            Message_Log = Message_Log )
      RETURN
    END IF

    IF ( PRESENT( Variable_ID ) ) Variable_ID = varID



    !#--------------------------------------------------------------------------#
    !#                      -- GET THE VARIABLE VALUE --                        #
    !#--------------------------------------------------------------------------#

    NF90_Status = NF90_GET_VAR( NC_FileID,      &
                                varID,          &
                                Variable_Value, &
                                START = Start   )

    IF ( NF90_Status /= NF90_NOERR ) THEN
      Error_Status = FAILURE
      CALL Display_Message( ROUTINE_NAME, &
                            'Error reading variable value for '// &
                              TRIM( Variable_Name )// &
                              ' - '// &
                              TRIM( NF90_STRERROR( NF90_Status ) ), &
                            Error_Status, &
                            Message_Log = Message_Log )
      RETURN
    END IF

  END FUNCTION get_scalar_#KIND#
