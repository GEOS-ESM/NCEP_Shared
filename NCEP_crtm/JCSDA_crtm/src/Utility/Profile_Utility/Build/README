Instructions for building and installing profile_utility on Unix
****************************************************************

$Revision$
CRTM support email: ncep.list.emc.crtm.support@noaa.gov


         Contents
         ========
  A. The easy (I hope) way...
  B. The more flexible way
    1. Configuration
    2. Building the library
    3. Testing the library
    4. Installing the library
    5. Uninstalling the library
    6. Cleaning up
  C. Reporting bug/problems/etc.



A. The easy (I hope) way...
===========================

To build the profile_utility library you can use the "make_profile_utility_lib.sh"
script specifying the build configuration. Type

  $ make_profile_utility_lib.sh -h

to get the usage information for the script.

The available, tested, build configurations are:

  gfortran-debug.setup        ifort-debug.setup       pgf95-debug.setup       xlf2003-debug.setup
  gfortran-debug.setup.csh    ifort-debug.setup.csh   pgf95-debug.setup.csh   xlf2003-debug.setup.csh
  gfortran.setup              ifort.setup             pgf95.setup             xlf2003.setup
  gfortran.setup.csh          ifort.setup.csh         pgf95.setup.csh         xlf2003.setup.csh

So, to use the gfortran compiler with debug switches you would type,

  $ make_profile_utility_lib.sh gfortran-debug.setup

And to use the Intel ifort compiler you would type:

  $ make_profile_utility_lib.sh ifort.setup

For those who use the C shell, note there are C shell specific files also. Thus,
in C shell, to use the gfortran compiler you would type:

  $ make_profile_utility_lib.sh gfortran.setup.csh

Some additional points:
- The library is installed relative to the current directory. After
  running the script you should see a new directory containing the
  library.
- See section B.4 below for information about the installation directory
  structure

You can tailor the build process using this "make_profile_utility_lib.sh" script by
modifying the relevant build configuration setup file in the "config-setup/"
subdirectory.

Or, if you are going to be testing library builds multiple times, you can
create your own configuration setup file.




B. The more flexible way
========================

1. Configuration
----------------

If you need more flexibility in the library build you can specify the necessary
information directly to the configure script that generates the makefiles. For
example, using the Intel ifort compiler:

  $ ./configure --prefix=${PWD} \
                FC="ifort" \
                FCFLAGS="-O2 -g -traceback"

The --prefix switch sets the installation directory and defaults to /usr/local so
make sure you set it to a directory in which you have write access.

The definition of the "FC" enviroment variable is not strictly necessary as it defaults
to "ifort" on linux systems if available (followed by "gfortran" and "pgf95" if not), and
to "xlf2003" on AIX systems.




2. Building the library
-----------------------

To start the library build for a particular configuration, simply type

  $ make




3. Testing the library
----------------------

To run the accompanying tests using the just-built library, simply type

  $ make check

This will build and run the tests, as well as report on how many passed/failed. The
output from the (successful) test runs looks like:

========================================
  Running tests...

     Running test_atmospheric_properties test...
 test_atmospheric_properties(INFORMATION) : MW_Air                        consistent. ULP =  1, %|Diff| =  0.000000E+00
 test_atmospheric_properties(INFORMATION) : Density                       consistent. ULP =  1, %|Diff| =  0.000000E+00
 test_atmospheric_properties(INFORMATION) : Virtual_Temperature   FORWARD consistent. ULP =  1, %|Diff| =  0.000000E+00
 test_atmospheric_properties(INFORMATION) : Virtual_Temperature   INVERSE consistent. ULP =  1, %|Diff| =  0.000000E+00
 test_atmospheric_properties(INFORMATION) : Potential_Temperature FORWARD consistent. ULP =  1, %|Diff| =  0.000000E+00
 test_atmospheric_properties(INFORMATION) : Potential_Temperature INVERSE consistent. ULP =  1, %|Diff| =  0.000000E+00
     SUCCESS!

     Running test_geopotential test...
 test_geopotential(INFORMATION) : Height                         consistent. ULP =  4, %|Diff| =  3.675513E-14
 test_geopotential(INFORMATION) : Height with gravity correction consistent. ULP =  4, %|Diff| =  3.845669E-14
 test_geopotential(INFORMATION) : Height at latitude 60deg.      consistent. ULP =  4, %|Diff| =  3.764468E-14
     SUCCESS!

  ...etc...

     Running test_level_layer_conversion test...
       Testing CREATE_SUBLEVELS and INTEGRATE_SUBLEVELS routines....
 test_level_layer_conversion(INFORMATION) : Layer pressure        consistent. ULP =  4, %MAX(|Diff|) =  1.124318E-14
 test_level_layer_conversion(INFORMATION) : Layer temperature     consistent. ULP =  3, %MAX(|Diff|) =  1.994417E-14
 test_level_layer_conversion(INFORMATION) : Layer water vapor     consistent. ULP =  4, %MAX(|Diff|) =  3.920604E-14
 test_level_layer_conversion(INFORMATION) : Layer ozone           consistent. ULP =  5, %MAX(|Diff|) =  4.592703E-14
 test_level_layer_conversion(INFORMATION) : Layer nitrous oxide   consistent. ULP =  3, %MAX(|Diff|) =  3.537453E-14
 test_level_layer_conversion(INFORMATION) : Layer carbon monoxide consistent. ULP =  3, %MAX(|Diff|) =  1.887415E-14
 test_level_layer_conversion(INFORMATION) : Layer methane         consistent. ULP =  3, %MAX(|Diff|) =  1.261121E-14
 test_level_layer_conversion(INFORMATION) : Layer nitrogen        consistent. ULP =  3, %MAX(|Diff|) =  1.383177E-14
       Testing EFFECTIVE_LAYER_TP routine test....
 test_level_layer_conversion(INFORMATION) : Effective layer pressure    consistent. ULP =  5, %MAX(|Diff|) =  3.796310E-14
 test_level_layer_conversion(INFORMATION) : Effective layer temperature consistent. ULP =  5, %MAX(|Diff|) =  4.878419E-14
     SUCCESS!

----------------------------------------
  Passed     4 of     4 tests
  Failed     0 of     4 tests
----------------------------------------
========================================


4. Installing the library
-------------------------

To install the library, type:

  $ make install

Installation of the library *always* occurs into its own directory within the
directory specified by the --prefix switch. The name of the installation
directory follows the convention:

  <library name>_<version>

So, if the a library version (say, v1.0.1) build was configured with --prefix=$PWD,
then the installation directory will be

  ${PWD}/profile_utility_v1.0.1

The directory structure is shown below:

  profile_utility_v1.0.1/
    |--config.log
    |--include/
    |    |--atmospheric_properties.mod
    |    |  ...etc...
    |    `--units_conversion.mod
    |
    `--lib/
         |
         `--libprofile_utility.a

The "config.log" file is the output logfile of the build process.

Let's assume the above install was moved into "$HOME/local". To use the library
in this structure in your own application, the usual environment variables
would be modified something like:

  libroot="$HOME/local"
  FCFLAGS="-I${libroot}/profile_utility_v1.0.1/include ${FCFLAGS}"
  LDFLAGS="-L${libroot}/profile_utility_v1.0.1/lib ${LDFLAGS}"
  LIBS="-lprofile_utility"




5. Uninstalling the library
-------------------------

To uninstall the library (assuming you haven't moved the installation directory
contents somewhere else) you can type:

  $ make uninstall

This will delete the created installation directory. So, for a library version
(say, v1.0.1), if your configure script invocation
was something like

  $ ./configure --prefix=${PWD} ...other command line arguments...

then the "uninstall" target will delete the "${PWD}/profile_utility_v1.0.1" directory.




6. Cleaning up
--------------

Two targets are provided for cleaning up after the build. To remove all the
build products type

  $ make clean

To also remove all the configuration products (i.e. the makefiles) type

  $ make distclean




C. Reporting bugs/problems/etc
==============================

To report bugs in the code or problems building the library, send an email to:

  ncep.list.emc.crtm.support@noaa.gov

For build problems, please attach the generated "config.log" file that is generated
during the build.

