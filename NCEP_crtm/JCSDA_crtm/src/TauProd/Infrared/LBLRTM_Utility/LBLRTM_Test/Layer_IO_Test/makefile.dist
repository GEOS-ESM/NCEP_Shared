#==============================================================================
#
# Makefile for LBLRTM Layer_IO_Test program
#
#==============================================================================

#-----------------------------------------------------------------------------
#                          -- Define macros --
#-----------------------------------------------------------------------------

include make.macros


# -------------
# This makefile
# -------------

MAKEFILE = makefile


# ----------------
# Executable files
# ----------------

EXE_FILE = Layer_IO_Test


# ------------
# Object files
# ------------

GENERAL_OBJ_FILES = type_kinds.o
UTILITY_OBJ_FILES = file_utility.o \
                    error_handler.o
LBL_OBJ_FILES = LBL_Define.o
LBLRTM_OBJ_FILES = LBLRTM_Parameters.o \
                   LBLRTM_Utility.o \
                   LBLRTM_Fhdr_IO.o \
                   LBLRTM_Phdr_IO.o \
                   LBLRTM_Panel_IO.o \
                   LBLRTM_Layer_IO.o

OBJ_FILES = $(GENERAL_OBJ_FILES) \
            $(UTILITY_OBJ_FILES) \
            $(LBL_OBJ_FILES) \
            $(LBLRTM_OBJ_FILES) \
            $(EXE_FILE).o



#-----------------------------------------------------------------------------
#                          -- Define dependecies --
#-----------------------------------------------------------------------------



# ---------------------
# Make based on OS type
# ---------------------

all:
	@echo "OS type detected: "`uname -s`
	@case `uname -s` in \
	  "SunOS")    make -f $(MAKEFILE) the_program $(SUNOS_FLAGS) ;; \
	   "AIX")     make -f $(MAKEFILE) the_program $(AIX_FLAGS) ;; \
	   "IRIX64" ) make -f $(MAKEFILE) the_program $(IRIX64_FLAGS) ;; \
	   "Linux" )  make -f $(MAKEFILE) the_program $(Linux_FLAGS_PGI) ;; \
	   *) echo "This system is not supported" ;; \
       esac


# ---------------------
# Make the test program
# ---------------------

the_program: $(OBJ_FILES)
	$(FL) $(OBJ_FILES) $(FL_FLAGS) $(EXE_FILE)


# --------
# Clean up
# --------

clean:
	$(REMOVE) $(OBJ_FILES) $(EXE_FILE) *.mod *.MOD *.stb


# ---------------
# Dependency list
# ---------------

type_kinds.o : type_kinds.f90 
file_utility.o : file_utility.f90 
error_handler.o : error_handler.f90 file_utility.o 

LBL_Define.o : LBL_Define.f90 type_kinds.o error_handler.o 

LBLRTM_Parameters.o : LBLRTM_Parameters.f90 type_kinds.o 
LBLRTM_Utility.o : LBLRTM_Utility.f90 type_kinds.o file_utility.o error_handler.o LBLRTM_Parameters.o 
LBLRTM_Fhdr_IO.o : LBLRTM_Fhdr_IO.f90 type_kinds.o file_utility.o error_handler.o LBLRTM_Parameters.o 
LBLRTM_Phdr_IO.o : LBLRTM_Phdr_IO.f90 type_kinds.o file_utility.o error_handler.o LBLRTM_Parameters.o 
LBLRTM_Panel_IO.o : LBLRTM_Panel_IO.f90 type_kinds.o file_utility.o error_handler.o LBLRTM_Parameters.o 
LBLRTM_Layer_IO.o : LBLRTM_Layer_IO.f90 type_kinds.o file_utility.o error_handler.o LBL_Define.o LBLRTM_Parameters.o LBLRTM_Utility.o LBLRTM_Fhdr_IO.o LBLRTM_Phdr_IO.o LBLRTM_Panel_IO.o 

$(EXE_FILE).o : $(EXE_FILE).f90 type_kinds.o file_utility.o error_handler.o LBLRTM_Parameters.o LBLRTM_Utility.o LBLRTM_Layer_IO.o 


# -------------------------------
# Create tarball for distribution
# -------------------------------

TAR_FILE = $(EXE_FILE)_software.tar

tar:
	$(TARBALL_CREATE) $(TAR_FILE) ${OBJ_FILES:.o=.f90}
	$(TARBALL_APPEND) $(TAR_FILE) makefile
	$(TARBALL_APPEND) $(TAR_FILE) make.macros make.rules
	compress $(TAR_FILE)



#-----------------------------------------------------------------------------
#                          -- Define default rules --
#-----------------------------------------------------------------------------

include make.rules

