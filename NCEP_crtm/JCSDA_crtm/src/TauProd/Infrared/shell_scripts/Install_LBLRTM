#!/bin/sh

SCRIPT_NAME="`basename $0`"


# Root directory definitions
# --------------------------
# The root directory/filesystem where all the
# LBLRTM software and fixed data is archived.
if [ -z "${ARCHIVE_ROOT_DIR}" ]; then
  ARCHIVE_ROOT_DIR="/global/save/${USER}"
fi

# The root directory/filesystem where the
# LBLRTM code and datafiles will be stored
if [ -z "${HOME_ROOT_DIR}" ]; then
  HOME_ROOT_DIR="/global/noscrub/${USER}"
fi

# The root directory/filesystem where the
# LBLRTM code will be run
if [ -z "${RUN_ROOT_DIR}" ]; then
  RUN_ROOT_DIR=${HOME_ROOT_DIR}
fi


# The generic LBLRTM directory names
# ----------------------------------
LBLRTM_ROOT_DIR="lblrtm"
LBLRTM_HITRAN_DIR="hitran"
LBLRTM_BIN_DIR="bin"
LBLRTM_RUN_DIR="lblrtm_scratch"


# Save the current directory location
# -----------------------------------
CURRENT_DIR=${PWD}


# Create LBLRTM scratch/run directory
# -----------------------------------
# Change to the directory/filesystem where
# the LBLRTM software will be run.
cd ${RUN_ROOT_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error changing to ${RUN_ROOT_DIR} directory from ${PWD}"
  exit 2
fi

# Create the scratch run directory
if [ ! -d ${LBLRTM_RUN_DIR} ]; then
  mkdir ${LBLRTM_RUN_DIR}
  if [ $? -ne 0 ]; then
    echo "${SCRIPT_NAME}: Error creating ${LBLRTM_RUN_DIR} directory in ${PWD}"
    exit 2
  fi
fi


# ----------------------------------------------------------
# Copy archived LBLRTM software and data to ${HOME_ROOT_DIR}
# ----------------------------------------------------------

# Change to the root directory/filesystem on
# which the LBLRTM software will be copied
# ------------------------------------------
cd ${HOME_ROOT_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error changing to ${HOME_ROOT_DIR} directory from ${PWD}"
  exit 2
fi

# Create LBLRTM directory if it doesn't already exist
# ---------------------------------------------------
if [ ! -d ${LBLRTM_ROOT_DIR} ]; then
  mkdir ${LBLRTM_ROOT_DIR}
  if [ $? -ne 0 ]; then
    echo "${SCRIPT_NAME}: Error creating ${LBLRTM_ROOT_DIR} directory in ${PWD}"
    exit 2
  fi
fi

# Enter LBLRTM directory for file copying
cd ${LBLRTM_ROOT_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error changing to ${LBLRTM_ROOT_DIR} directory from ${PWD}"
  exit 2
fi


# Copy over HITRAN TAPE3 data
# ---------------------------
# Define the source and destination directories
FROM_DIR=${ARCHIVE_ROOT_DIR}/${LBLRTM_ROOT_DIR}/${LBLRTM_HITRAN_DIR}
TO_DIR=${HOME_ROOT_DIR}/${LBLRTM_ROOT_DIR}/${LBLRTM_HITRAN_DIR}
echo
echo " Copying HITRAN data from ${FROM_DIR} to ${TO_DIR}..."

# Create hitran subdirectory
if [ ! -d ${LBLRTM_HITRAN_DIR} ]; then
  mkdir ${LBLRTM_HITRAN_DIR}
  if [ $? -ne 0 ]; then
    echo " Error creating ${LBLRTM_HITRAN_DIR} directory in ${PWD}"
    exit 2
  fi
fi

# Copy the cross-section data
cp -r ${FROM_DIR}/xs ${TO_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error copying ${LBLRTM_HITRAN_DIR}/xs directory data"
  exit 2
fi

# Copy the cross-section control file
cp ${FROM_DIR}/FSCDXS ${TO_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error copying ${LBLRTM_HITRAN_DIR}/FSCDXS file"
  exit 2
fi

# Copy the tape3 datafiles
cp ${FROM_DIR}/tape3* ${TO_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error copying ${LBLRTM_HITRAN_DIR}/tape3 files"
  exit 2
fi


# Copy over executable files
# --------------------------
# Define the source and destination directories
FROM_DIR=${ARCHIVE_ROOT_DIR}/${LBLRTM_ROOT_DIR}/${LBLRTM_BIN_DIR}
TO_DIR=${HOME_ROOT_DIR}/${LBLRTM_ROOT_DIR}
echo
echo " Copying executables from ${FROM_DIR} to ${TO_DIR}..."

# Copy everything
cp -r ${FROM_DIR} ${TO_DIR}
if [ $? -ne 0 ]; then
  echo "${SCRIPT_NAME}: Error copying ${LBLRTM_BIN_DIR} directory files"
  exit 2
fi


# Return to the start directory
# -----------------------------
cd ${CURRENT_DIR}

