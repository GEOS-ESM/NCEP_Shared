This file explains how to compile the NCEP BUFRLIB software, which is
described in detail at http://www.nco.ncep.noaa.gov/sib/decoders/BUFRLIB/,
and whose usage is governed by the terms and conditions of the disclaimer
http://www.nws.noaa.gov/disclaimer.html

The NCEP BUFRLIB software has been compiled and tested across a wide variety
of UNIX platforms, including AIX, HP-UX, IRIX, SunOS and Linux; thus, it
should port with minimal difficulty to any UNIX system by following the steps
below:

1)  Define two environment variables on the local machine:

	$FC to point to the local FORTRAN compiler

	$CC to point to the local C compiler

2)  Run the command:

	$CC -c `./preproc.sh` *.c

    This command first calls the "preproc.sh" script to pre-process all of
    the "*.F" and "*.PRM" files into corresponding "*.f" and "*.prm" files
    within the same directory.  It then uses the standard output from the
    script as define flags to the C compiler in order to compile all of the
    C source files within this same directory.  If any warning messages are
    received relating to missing terminator characters in any of the "*.F"
    files, edit the "preproc.sh" script and add the "-traditional-cpp"
    option to both calls to cpp, then retry the command.

    Note that the option "-DUNDERSCORE" should also be added to this command if
    the local FORTRAN compiler appends an underscore character to subprogram
    names in its object namespace.  In such cases, specifying "-DUNDERSCORE" to
    the C compiler appends a matching underscore character to any C references
    to the same subprogram names, which will allow the linker to correctly
    resolve such references across the C <-> FORTRAN interface at link time.

3)  Run the command:

	$FC -c modv*.f moda*.f `ls -1 *.f | grep -v "mod[av]_"`

    This command compiles all of the FORTRAN module variable files, followed
    by all of the FORTRAN module array files, followed by all remaining
    FORTRAN source files.  Note that it's usually necessary to include the
    option "-fno-second-underscore" in this command whenever $FC points to
    the GNU g77 or gfortran compilers.

    Note that on some systems, most notably Linux, it may also be necessary to
    include the "-traditional-cpp" option when calling the cpp program from
    within "preproc.sh".  If any problems are encountered during this FORTRAN
    compilation step relating to misaligned white space in some of the source
    files, try editing a copy of "preproc.sh" to add the "-traditional-cpp"
    option in the two calls to cpp, then repeat steps 2) and 3) again to see
    if that solves the problem.

4)  Once compilation has been successfully completed, it is then recommended to
    assemble all of the compiled object files into a single archive library via:

        ar crv $BUFRLIB *.o

    where $BUFRLIB points to the desired pathname for the BUFRLIB archive
    library on the local machine.  This archive library can then be easily
    linked whenever the user's application program is subsequently compiled on
    the same local system.
